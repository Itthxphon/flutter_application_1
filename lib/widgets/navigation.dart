import 'package:flutter/material.dart';
import '../screens/sale_orders.dart';

class MainNavigationScreen extends StatelessWidget {
  const MainNavigationScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        automaticallyImplyLeading: false, // ‚ùå ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏° back/hamburger
        backgroundColor: const Color(0xFF1A1A2E),
        foregroundColor: Colors.white,

        // ‚úÖ ‡πÉ‡∏ä‡πâ Row + Expanded ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î layout ‡πÅ‡∏ö‡∏ö "‡∏Å‡∏£‡∏≠‡∏á - ‡∏ä‡∏∑‡πà‡∏≠ - ‡∏Å‡∏£‡∏∞‡∏î‡∏¥‡πà‡∏á"
        title: Row(
          children: [
            // ‚úÖ [‡∏ã‡πâ‡∏≤‡∏¢] ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏£‡∏≠‡∏á
            IconButton(
              icon: const Icon(Icons.tune),
              tooltip: '‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏™‡∏µ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
              onPressed: () {
                _showColorFilterMenu(context); // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á popup ‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏µ
              },
            ),

            // ‚úÖ [‡∏Å‡∏•‡∏≤‡∏á] ‡∏ä‡∏∑‡πà‡∏≠ "‡πÄ‡∏ä‡πá‡∏Ñ Serial Number"
            const Expanded(
              child: Center(
                child: Text(
                  '‡πÄ‡∏ä‡πá‡∏Ñ Serial Number',
                  style: TextStyle(fontWeight: FontWeight.bold),
                ),
              ),
            ),

            // ‚úÖ [‡∏Ç‡∏ß‡∏≤] ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
            IconButton(
              icon: const Icon(Icons.notifications),
              tooltip: '‡∏á‡∏≤‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥',
              onPressed: () {
                // üîî ‡πÉ‡∏™‡πà‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥
              },
            ),
          ],
        ),
      ),

      // ‚úÖ [Body] ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≤‡∏¢
      body: const SaleOrdersScreen(),
    );
  }

  // ‚úÖ ‡πÄ‡∏°‡∏ô‡∏π‡∏Å‡∏£‡∏≠‡∏á‡∏™‡∏µ (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏Å‡∏£‡∏≠‡∏á)
  void _showColorFilterMenu(BuildContext context) {
    showModalBottomSheet(
      context: context,
      shape: const RoundedRectangleBorder(
        borderRadius: BorderRadius.vertical(top: Radius.circular(20)),
      ),
      builder: (context) {
        return Padding(
          padding: const EdgeInsets.all(16),
          child: Wrap(
            children: [
              const Text(
                '‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏™‡∏µ‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏™‡πà‡∏á',
                style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
              ),
              const SizedBox(height: 12),
              Wrap(
                spacing: 8,
                runSpacing: 8,
                children: [
                  _buildColorFilterOption(context, null, '‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î'),
                  ...[
                    'red',
                    'yellow',
                    'pink',
                    'blue',
                    'purple',
                    'lightsky',
                    'brown',
                    'lightgreen',
                    'green',
                  ].map(
                    (color) => _buildColorFilterOption(context, color, color),
                  ),
                ],
              ),
            ],
          ),
        );
      },
    );
  }

  // ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏µ
  Widget _buildColorFilterOption(
    BuildContext context,
    String? color,
    String label,
  ) {
    return ChoiceChip(
      label: Text(label),
      selected:
          false, // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏ô‡∏µ‡πâ (‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ô state ‡∏ó‡∏µ‡πà SaleOrdersScreen ‡πÅ‡∏ó‡∏ô)
      onSelected: (_) {
        Navigator.pop(context);

        // ‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á SaleOrdersScreen ‡∏ú‡πà‡∏≤‡∏ô Event ‡∏´‡∏£‡∏∑‡∏≠ Callback
        // ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Provider ‡∏´‡∏£‡∏∑‡∏≠ callback ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
      },
      backgroundColor: Colors.grey[200],
      selectedColor: Colors.blue.shade100,
      avatar:
          color == null
              ? null
              : CircleAvatar(backgroundColor: _mapColor(color), radius: 6),
    );
  }

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏µ‡πÄ‡∏õ‡πá‡∏ô Color
  Color _mapColor(String color) {
    switch (color) {
      case 'red':
        return Colors.red;
      case 'yellow':
        return Colors.yellow;
      case 'pink':
        return Colors.pink;
      case 'blue':
        return Colors.blue;
      case 'purple':
        return Colors.purple;
      case 'lightsky':
        return Colors.lightBlueAccent;
      case 'brown':
        return Colors.brown;
      case 'lightgreen':
        return Colors.lightGreen;
      case 'green':
        return Colors.green;
      default:
        return Colors.grey;
    }
  }
}
